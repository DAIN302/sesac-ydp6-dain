ver1. 평문 쿠키
: myValueTest
ver2. 서명된 쿠키
s%3AmyValueTest.hJ%2B5zrjA0i%2BCMvWo8bV5ldOFBkahM3DUIlM99CDAM88
서명된 쿠키?
s%3A쿠키값.임의의문자열
s%3A? 접두사 (해당 쿠키값 자체가 서명됨을 알려주는 접두사)
-> 서명된 쿠키/평문 쿠키를 구별
-> 클라이언트가 임의로 서명된 쿠키를 만들거나 조작할 수 없도록
-----
1. 서버가 "서명된 쿠키"를 받으면, "s%3A"를 보고 서명된 쿠키임을 인식
2. 서버의 비밀키(process.env.COOKIE_SECRET)를 사용해 다시 서명하고 받은 서명이랑 비교
3. 두 값이 일치하면 쿠키가 변조되지 않았음을 신뢰하고 사용


쿠키 vs. 세션
- 비슷한 역할, 동작원리 유사 (세션도 어쨌든 쿠키 기반!)
- 쿠키: 서버의 자원을 사용하지 않고
- 세션: 서버의 자원을 사용
- 보안: 세션 > 쿠키
	쿠키는 로컬 저장 -> 변조될 가능성 존재
	세션은 session-id 만 저장하고 나머지는 서버에서 처리 "비교적" 안전
- 세션 만료기간 설정할 수 있으나, 브라우저가 종료되면(=/= 탭을 닫는 것) 만료기간과 상관없이 삭제됨
- 속도: 쿠키 > 세션


세션
1. 서버가 웹 브라우저(클라이언트)한테 세션 값을 보낸다. (sid: 서버가 클라이언트를 구별할 수 있는 식별자)
2. 클라이언트는 요청마다 자신이 갖는 sid 서버한테 전달
3. 서버는 클라이언트의 sid(req.sessionID) 가지고 유저의 데이터를 구별 가능