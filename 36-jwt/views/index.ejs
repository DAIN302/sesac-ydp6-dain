<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>JWT 실습</title>
    <!-- Axios CDN -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  </head>
  <body>
    <h1>JWT 로컬스토리지 실습</h1>
    <div id="info"></div>
    <script>
      // 즉시 실행 함수 표현식(IIFE 구조)
      /*
        IIFE 구조 (Immediately Invoked Function Expression)
        이 함수 표현식은 함수가 한 번만 사용될 떄 유용
        전역 범위에 불필요한 함수 추가하지 않아도 됨
        스코프 : 자체적인 스코프가 생성되서 변수 충돌을 방지하는 효과가 있음
        IIFE 내부에서 선언된 변수들은 IIFE 외부에 영향을 주지 않음
      */
      // (function(){코드코드})() -> JS 에서 함수를 정의하자마자 즉시 실행할 수 있는 패턴
      (async function () {
        const token = localStorage.getItem("login");
        const info = document.querySelector("#info");
        let data = "";
        if (!token) {
          // 토큰이 없으면
          data = `<a href="/login">로그인</a>`;
        } else {
          // 토큰이 있으면
          const res = await axios({
            method: "POST",
            url: "/token",
            headers: {
              Authorization: `Bearer ${token}`,
            },
          });
          if (res.data.result) {
            data = `<p>${res.data.name}님 환영합니다</p>
                            <button type="button" onclick="logout()">로그아웃</button>
                    `;
          }
        }
        info.innerHTML = data;
      })();

      // 로그아웃 함수
      function logout() {
        localStorage.clear();
        document.location.reload();
      }
    </script>
  </body>
</html>
