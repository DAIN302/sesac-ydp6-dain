.div1  {
    width: 100px;
    height: 100px;
    background-color: aquamarine;
    text-align: center;
}

/* 
    :hover -> 요소에 마우스를 올렸을 때 
*/

.div1:hover {
    background-color: hotpink;
    width: 150px;
    height: 150px;
}
/* 
    :active -> 요소를 마우슬 클릭하고 있을 때
*/

.div1:active {
    background-color: brown;
    width: 200px;
}

/* 
    :focus -> 요소에 포커스가 되었을 때
*/

input:focus {
    background-color: violet;
    color: lightblue;
    outline-color: yellowgreen;
}

.links > a:hover {
    background-color: coral;
}

.links > a:visited {
    color: red;
}

/* 요소 상황에 따른 가상 클래스 선택자 */
.zoo > * {
    background-color: green;
    color: white;
}

/* 1) 요소:first-child : 요소가 첫번째 요소라면 */

.zoo > *:first-child { /* *은 생략가능 */
    background-color: red;
}

/* 2) 요소:last-child : 요소가 마지막 요소라면 */
.zoo > li:last-child { /* li 생략 가능 */
    background-color: black;
}

/* 3) 요소:nth-child(n) : 요소가 n번째 요소라면 */
.zoo > :nth-child(2) {
    background-color: aqua;
}

/* 4) 요소:not(XYZ) : XYZ가 아닌 요소 선택 */
.zoo > :not(div) {
    background-color: pink;
}

.zoo > :nth-child(even) {
    font-size: 30px;
}

/* 가상 요소 : before, after */
/* 
   HTML 요소의 특정 부분을 스타일링하기 위해 사용,
   실제 HTML문서에 존재하지 않는 부분이지막 css을 통해 스타일 적용 가능 
   
   가상클래스 : 와 가상요소 :: 의 차이?
   CSS 사양이 발전하면서 가상클래스와 가상요소 명확하게 구분할 필요성 생ㄱㅁ,
   가상클래스 - 문서의 기존 요소 상태를 나타냄
   가상요소 - 문서의 특정 부분을 생성하여 스타일링
   구분하기 위해 ::로 표기하는 새로운 표기법 도입
*/

.box::before {
    content: '택시';
    color: red;
}

.box::after {
    content: '빨리';
    color: blue;
}