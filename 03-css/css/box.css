.container {
    display: flex;
    gap: 20px;
}

.box {
    width: 200px;
    height: 200px;
    padding: 20px;
    border : 10px solid black;
    background-color: pink;
}

/* box-sizing 속성 */
/* content-box : 콘텐츠 기준으로 크기 정함(only content) */
.content-box {
    box-sizing: content-box;
    /* width : 260px, height : 260px */
}

/* border-box : 테두리 기준으로 크기 정함(content + padding + border) */
.border-box {
    box-sizing: border-box;
    /* width : 200px, height : 200px */
    /* 지정된 너비와 높이 내에서 패딩과 테두리를 포함하므로, 실제로 콘텐츠가 차지할 수 있는 공간이 작아짐 */
}

/* 
   장단점 
   content-box 
   장점 
   - 콘텐츠 유연성 : 지정된 크기에 따라 동적으로 조정, 디자인 유연성이 높음
   - 디자인 제어 : 패딩, 테두리를 분리해서 디자인 요소를 더 정교하게 제어 가능
   단점 
   - 레이아웃 복잡성 : 다 각각 계산해야하므로 시간과 노력 요구됨
   - 계산 오류 가능성 : 별도로 계산하다가 오류 발생 확률 높음

   border-box
   장점
   - 예측 가능성 : 총 너비와 높이를 예측하기 쉬움
   - 유지보수, 간편한 계산 : 일관된 디자인, 별도로 계산할 필요가 없어짐
   단점
   - 내용공간 감소 : 패딩과 테두리가 포함되므로 실제 콘텐츠 영역이 작아짐

*/